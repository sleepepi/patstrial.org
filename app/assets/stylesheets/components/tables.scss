.table-fixed {
  table-layout: fixed;
}

.table {
  &.table-borderless {
    td,
    th {
      border-width: 0;
    }

    > tbody + tbody {
      border-width: 0;
    }
  }
}

.table-sticky {
  position: relative;
  z-index: 1;

  th {
    position: sticky;
    top: $header-height - 1px;
    z-index: $zindex-sticky;
  }
}

.tr-align-middle {
  td,
  th {
    vertical-align: middle;
  }
}

@each $name, $theme in $themes {
  .theme-#{$name}-bg {
    .table-sticky {
      th {
        background-color: map-get($theme, dashboard-bg);
      }
    }
    .table-striped tbody tr:nth-of-type(odd) {
      background-color: theme-color($theme, table-accent-bg, $table-accent-bg);
    }
    .table-hover tbody tr:hover {
      background-color: theme-color($theme, table-hover-bg, $table-hover-bg);
    }
  }
}

.table-cell-search-input {
  display: block;
  padding: 0 map-get($spacers, 2);
  width: 100%;
}

.table .percent {
  border-right: 1px solid $p200-grey;
  font-size: 10px;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
}

.table .count {
  border-left: 1px solid $p200-grey;
  text-align: center;
  vertical-align: middle;
}

.table-fixed {
  table-layout: fixed;
}

@each $name, $theme in $themes {
  .theme-#{$name}-bg {
    .table .lighter {
      color: map-get($theme, p200);
    }

    .table .sort-selected {
      @if map-get($theme, link-color) {
        border-bottom-color: map-get($theme, link-color);
      } @else {
        border-bottom-color: map-get($theme, primary);
      }
    }
  }
}
