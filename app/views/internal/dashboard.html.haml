- @title = "Dashboard"

- content_for :header do
  - report_grades = Report.find_by(name: "Report Card")
  - if report_grades
    - data = report_grades.data&.with_indifferent_access
    - grade = data&.dig(:overall)&.first
    - if grade
      .float-right
        %div.text-right{ style: "font-size: 14px;" }
          .mb-2
            = link_to reports_static_grades_path do
              Report Card
              %span.d-none.d-sm-inline Available
              &raquo;
          %div
            %span.d-none.d-sm-inline Top Site
            = render "reports_static/grade", percent: grade[:percent]
            = grade[:number_and_short_name]
  - else
    - if @grades
      .float-right
        - grade = @grades[:overall].first
        %div.text-right{ style: "font-size: 14px;" }
          %div{ style: "margin-bottom: 10px;" }
            = link_to reports_static_grades_path do
              Report Card
              %span.d-none.d-sm-inline Available
              &raquo;
          %div
            %span.d-none.d-sm-inline Top Site
            = render "reports_static/grade", percent: grade[:percent]
            = grade[:short_name]
  = @title
= render "internal/tabs"
- content_for :sidebar, render("internal/sidebar")

- report_randomizations = Report.find_by(name: "Randomizations")

- if report_randomizations
  - scheme_name = "PATS Treatment Assignment"
  - randomization_goal = Report::EXPECTED_RANDOMIZATIONS.last
  - randomization_total = report_randomizations.report_rows.sum do |row|
    - row.result["count"].to_i
  .jumbotron
    .float-right.text-center
      = link_to reports_static_randomized_path, class: "title-link" do
        %h4.text-muted Randomized
        %h2= number_with_delimiter randomization_total
    %h4.text-muted Scheme
    %h2.mb-3= scheme_name
    - if randomization_total.positive? && randomization_goal.positive?
      - percent = [randomization_total * 100 / randomization_goal, 100].min
      .progress
        .progress-bar.progress-bar-striped.bg-primary{ style: "width: #{percent}%;min-width: 5em;" }= "#{randomization_total} of #{randomization_goal}"
- else
  - if @randomized
    .jumbotron
      .float-right.text-center
        = link_to reports_static_randomized_path, class: "title-link" do
          %h4.text-muted Randomized
          %h2= number_with_delimiter @randomized[:total]
      %h4.text-muted Scheme
      %h2= @randomized[:scheme_name]
      - if @randomized[:total] > 0 && @randomized[:randomization_goal] > 0
        - percent = [@randomized[:total] * 100 / @randomized[:randomization_goal], 100].min
        .progress{ style: "margin-top: 20px;margin-bottom: 0" }
          .progress-bar.progress-bar-striped.bg-primary{ style: "width: #{percent}%;min-width: 5em;" }= "#{@randomized[:total]} of #{@randomized[:randomization_goal]}"

- if report_randomizations
  = render "reports/chart", report: report_randomizations if report_randomizations.report_type == "randomizations_by_site_by_month"
- else
  - if @randomized && @randomized[:total] > 0
    .w-100{ style: "margin-bottom: 20px", data: { object: "draw-chart", series: @randomized[:series].to_json, categories: @randomized[:categories].to_json, title: @randomized[:title], yaxis: @randomized[:yaxis], xaxis: @randomized[:xaxis] } }

.row
  .col-md-4
    = link_to reports_static_screened_path, class: "title-link" do
      .jumbotron.text-center
        %h4.text-muted Screened
        .report-number
          - report_screened = Report.find_by(name: "Screened")
          - if report_screened
            = number_with_delimiter report_screened.total_count
          - else
            = number_with_delimiter @screened[:total] rescue 0
  .col-md-4
    = link_to reports_static_consented_path, class: "title-link" do
      .jumbotron.text-center
        %h4.text-muted Consented
        .report-number
          - report_consented = Report.find_by(name: "Consented")
          - if report_consented
            = number_with_delimiter report_consented.total_count
          - else
            = number_with_delimiter @consented[:total] rescue 0
  .col-md-4
    = link_to reports_static_eligible_path, class: "title-link" do
      .jumbotron.text-center
        %h4.text-muted Eligible
        .report-number
          - report_eligible = Report.find_by(name: "Eligible")
          - if report_eligible
            = number_with_delimiter report_eligible.total_count
          - else
            = number_with_delimiter @eligible[:total] rescue 0

- report_eligibility_screened = Report.find_by(name: "Eligibility status - Screened")
- report_screened = Report.find_by(name: "Screened")
- if report_screened && report_eligibility_screened&.muted_row_count&.positive?
  .dashboard-container
    %p
      Note:
      = link_to reports_static_eligibility_status_path do
        %strong= number_with_delimiter report_eligibility_screened.muted_row_count
        of the total
        %strong= number_with_delimiter report_screened.total_count
        screened
      have not yet been assigned a final eligibility status.
- else
  - if @screened && @screened[:in_pipeline] > 0
    .dashboard-container
      %p
        Note:
        = link_to reports_static_eligibility_status_path do
          %strong= number_with_delimiter @screened[:in_pipeline]
          of the total
          %strong= number_with_delimiter @screened[:total]
          screened
        have not yet been assigned a final eligibility status.

- if report_randomizations
  = render "reports/table", report: report_randomizations
- else
  - if @randomized && @randomized[:table] && @randomized[:table][:total] > 0
    .dashboard-container.dashboard-table
      = render "reports_static/draw_table", table: @randomized[:table]

.jumbotron.jumbotron-custom-text
  - if report_randomizations
    .mb-3
      Data last updated
      = report_randomizations.last_cached_at.strftime("%a, %b %-d at %-l:%M %p.")
  - else
    - if @recruitment
      .mb-3
        Data last updated
        = Time.parse(@recruitment[:exported_at]).strftime("%a, %b %-d at %-l:%M %p.")

  = icon("far", "comment")
  Please
  = mail_to ENV["support_email"], "contact us"
  with any questions you may have.
